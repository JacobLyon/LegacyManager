// Place all the styles related to the Pages controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
// Place all the styles related to the Pages controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
/* General */
html,
body {
  height: 100%;
  margin: 0;
}
body {
  // background-image: url('http://s3.amazonaws.com/codecademy-content/courses/learn-rails/img/bg-static.jpg');
  background-image: url("arkcorp.jpg");
  background-repeat: no-repeat;
  position: relative;
  font-family: 'Source Sans Pro', sans-serif;
}

// **********************BELOW IS TEST CODE CAN BE UNSTABLE*********************************
/*I love me some border-box*/
* {
  box-sizing: border-box;
}
/*This just stops me getting horizontal scrolling if anything overflows the width*/
body {
  overflow-x: hidden;
}
/*Just removing default browser padding/margin*/
html,
body {
  padding: 0;
  margin: 0;
  color: #ebebeb;
}
/*Flexbox gives us the flexiness we need. The top just stays put as there is no scrolling on the body due to the page never exceeding viewport height*/
.Top {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 3rem;
  position: relative;
  z-index: 10;
  height: 100px;
}

.Rank{
  background-image: url("General_Grade_One.png");
  background-position: center;
  display: flex;
  background-repeat: no-repeat;
  position: absolute;
  top: 130px;
  left: 25px;
  height: 250px;
  width: 550px;
  border:2px solid black;
}
/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/
.Container {
  background-image: url("bluecolormap.png");
  display: flex;
  overflow: hidden;
  height: 375px;
  position: absolute;
  top: 400px;
  left: 25px;
  width: 550px;
  backface-visibility: hidden;
  will-change: overflow;
  border:2px solid black;
}
/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/
.Middle {
  height: auto;
  overflow: auto;
  padding: .5rem;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
}
/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly*/
.Middle::-webkit-scrollbar {
  display: none;
}
/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
.Middle {
  flex: 1;
}
